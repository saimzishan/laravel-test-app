<?php

namespace App\Http\Controllers\Stripe;

use App\Firm;
use App\Http\Libraries\HelperLibrary;
use App\Http\Libraries\StripeLibrary;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;

class ReActivationController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        //
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $stripe = new StripeLibrary(HelperLibrary::getFirmID());
        try {
            $success = true;
            $firm = Firm::find(HelperLibrary::getFirmID());
            $qty = $firm->getPaymentUsers();
            $firm->newSubscription('main', 'ftt_monthly_all')->quantity($qty)->skipTrial()->create($request->stripe_token, [
                'email' => $request->customer['email'],
                'name' => $request->customer['name'],
                'phone' => $request->phone_number,
                'address' => [
                    "line1" => $request->customer['address_line1'],
                    "line2" => " - ",
                    "city" => $request->customer['address_city'],
                    "state" => $request->customer['address_state'],
                    "postal_code" => $request->customer['address_zip'],
                ],
                "description" => "Firm: " . HelperLibrary::getFirm()->name ." (Generated By firmTRAK Visualize)"
            ]);
            $firm->trial_ends_at = null;
            $firm->is_active = true;
            $firm->subscribe_email = $request->customer['email'];
            $firm->subscribe_user_name = $request->customer['name'];
            $firm->save();
            $stripe->subscribeUser();
        } catch (\Exception $e) {
            $success = false;
        }
        return response()->json([
            "success" => $success
        ]);
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }
}
